import React from "react";
import { NextPage } from "next";
import { EStatus, loadFirstPage } from "@/lib/get-func";
import { IMatchProps } from "@/repositories/data";
import { useAppDispatch, useAppSelector } from "@/store/hook";
import Layout from "@/components/layout/layout";
import Domestic from "@/components/domestic/domestic";
import {
  checkOddMatch,
  getDataCollectionSnapshort,
} from "@/lib/snapshort-func";
import { addCountries, addLeagues, addTeams } from "@/store/slices/countries";
import useSWR from "swr";
import CircularProgress from "@mui/material/CircularProgress";
import Box from "@mui/material/Box";
import EmptyData from "@/components/ui/EmptyData/input";
import { setBettingRules } from "@/store/slices/bettingRulesSlice";
import { isEmpty } from "lodash";

import classes from "@/components/domestic/Domestic.module.css";

interface IDataProps {
  datas: { data: IMatchProps[]; totalData: number; lastVisible: string };
}

const DomesticPage: NextPage<IDataProps> = () => {
  const { category } = useAppSelector((state) => state.categorySlice);
  const dispatch = useAppDispatch();
  const {
    data: datas,
    isLoading,
    mutate,
  } = useSWR("domestic", {
    fetcher: async () => {
      return await loadFirstPage("matches", category.id, EStatus.OFF);
    },
  });

  React.useEffect(() => {
    mutate(undefined);
    getDataCollectionSnapshort("preferences", (data) =>
      dispatch(setBettingRules({ rules: data.data[0] }))
    );
    getDataCollectionSnapshort("countries", (data) => {
      dispatch(addCountries(data.data));
    });
    getDataCollectionSnapshort("leagues", (data) => {
      dispatch(addLeagues(data.data));
    });
    getDataCollectionSnapshort("team", (data) => {
      dispatch(addTeams(data.data));
    });
  }, [category]);

  return (
    <Layout title="Domestic" description="Generated by create next app">
      {!isLoading ? (
        datas ? (
          <Domestic matchesData={datas} />
        ) : (
          <EmptyData message="Not found domestic matches!" />
        )
      ) : (
        <Box sx={{ display: "flex", justifyContent: "center" }}>
          <div className={classes.boxLoading}>
            <CircularProgress />
          </div>
        </Box>
      )}
    </Layout>
  );
};

export default DomesticPage;
