import Layout from "@/components/layout/layout";
import Sport from "@/components/sport/sport";
import { cards } from "@/data";
import React, { useState } from "react";
import { useAppDispatch, useAppSelector } from "@/store/hook";
import { getDataCollectionSnapshort } from "@/lib/snapshort-func";
import { setBettingRules } from "@/store/slices/bettingRulesSlice";
import { addCountries } from "@/store/slices/countries";
import { collection, query, where, onSnapshot } from "firebase/firestore";
import { db } from "@/helpers/db-config";
import { RootState } from "@/store";
import { DocumentData } from "@firebase/firestore-types";
import Modal from "@/components/ui/popup/modal";
import parse from "html-react-parser";
import { isEmpty } from "lodash";
import classes from "./index.module.css";

interface IPropsData {}

interface ComponentSportPage extends React.FC<IPropsData> {}

const now = new Date();
const nowTimestamp = Math.floor(now.getTime() / 1000); // seconds

const SportPage: ComponentSportPage = () => {
  const dispatch = useAppDispatch();
  const [popupDataList, setPopupDataList] = useState<DocumentData>([]);
  const [showNotifyModal, setShowNotifyModal] = useState<boolean>(true);
  const { id } = useAppSelector((state: RootState) => state.user);
  const [idPopup, setIdPopup] = useState<string>("");

  React.useEffect(() => {
    getDataCollectionSnapshort("preferences", (data) =>
      dispatch(setBettingRules({ rules: data.data[0] }))
    );
    getDataCollectionSnapshort("countries", (data) => {
      dispatch(addCountries(data.data));
    });
    getDataCollectionSnapshort("leagues", (data) => {
      dispatch(addCountries(data.data));
    });

    let q = query(
      collection(db, "notifications"),
      where("status", "==", "Active"),
      where("type", "==", "Popup"),
      where("users", "array-contains", id)
    );
    const unsubscribe = onSnapshot(q, (querySnapshot: any) => {
      const data: DocumentData[] = [];
      querySnapshot.forEach((doc: DocumentData) => {
        // doc.data() is never undefined for query doc snapshots
        data.push(doc.data());
      });
      setPopupDataList(data);
    });
    return () => {
      unsubscribe();
    };
  }, []);

  const popupDatas = popupDataList.filter(
    (popupDataItem: any) =>
      popupDataItem.display_start <= nowTimestamp &&
      nowTimestamp <= popupDataItem.display_end
  );

  const cancelPopup = (id: string) => {
    setIdPopup(id);
    setShowNotifyModal(false);
  };

  return (
    <Layout title="Home" description="Generated by create next app">
      {/* {!isEmpty(popupDataList)
        ? popupDataList.map((popupDataItem: any) => {
            return (
              <Modal
                key={popupDataItem.id}
                show={showNotifyModal}
                title={popupDataItem.title}
                header={true}
                closeAble={true}
                footer={true}
                okText="Confirm"
                onCancel={() => {
                  cancelPopup(popupDataItem.id);
                }}
                onOk={() => setShowNotifyModal(false)}
              >
                {parse(popupDataItem.content)}
              </Modal>
            );
          })
        : null} */}

      <Sport dataGameCard={cards} />
    </Layout>
  );
};
export default SportPage;
