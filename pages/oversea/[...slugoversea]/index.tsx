import React from "react";
import { getDataCollectionSnapshort } from "@/lib/snapshort-func";
import { addCountries, addLeagues, addTeams } from "@/store/slices/countries";
import { useAppDispatch, useAppSelector } from "@/store/hook";
import { RootState } from "@/store";
import { Box } from "@mui/material";
import Oversea from "@/components/oversea";
import Layout from "@/components/layout/layout";
import EmptyData from "@/components/ui/EmptyData/input";
import CircularProgress from "@mui/material/CircularProgress";
import useSWR from "swr";
import { collection, getDocs, where, query } from "firebase/firestore";
import { db } from "@/helpers/db-config";
import { DocumentData } from "@firebase/firestore-types";
import { EStatus } from "@/lib/get-func";
import { useRouter } from "next/router";
import { setBettingRules } from "@/store/slices/bettingRulesSlice";

import classes from "@/components/domestic/Domestic.module.css";

const OverseaQueriedPage = () => {
  const dispatch = useAppDispatch();
  const { category } = useAppSelector(
    (state: RootState) => state.categorySlice
  );

  const router = useRouter();
  const { slugoversea } = router.query;
  const sportId = slugoversea && slugoversea[0];
  const id = slugoversea && slugoversea[1];

  const {
    data: datas,
    isLoading,
    mutate,
  } = useSWR(["oversea", id], {
    fetcher: async () => {
      let q = query(
        collection(db, "matches"),
        where("sport_id", "==", sportId ? sportId : category.id),
        where("league.id", "==", id),
        where("time_status", "==", EStatus.OFF.toString())
      );
      if (!q) return null;

      const querySnapshot = await getDocs(q);
      const data: DocumentData[] = [];
      querySnapshot.forEach((doc) => {
        // doc.data() is never undefined for query doc snapshots
        data.push(doc.data());
      });
      return data;
    },
  });

  React.useEffect(() => {
    mutate(undefined);
    getDataCollectionSnapshort("preferences", (data) =>
      dispatch(setBettingRules({ rules: data.data[0] }))
    );
    getDataCollectionSnapshort("countries", (data) => {
      dispatch(addCountries(data.data));
    });
    getDataCollectionSnapshort("leagues", (data) => {
      dispatch(addLeagues(data.data));
    });
    getDataCollectionSnapshort("team", (data) => {
      dispatch(addTeams(data.data));
    });
  }, [category]);

  return (
    <Layout title="Oversea" description="Generated by create next app">
      {!isLoading ? (
        datas ? (
          <Oversea matchesData={datas} />
        ) : (
          <EmptyData message="Not found oversea matches!" />
        )
      ) : (
        <Box sx={{ display: "flex", justifyContent: "center" }}>
          <div className={classes.boxLoading}>
            <CircularProgress />
          </div>
        </Box>
      )}
    </Layout>
  );
};

export default OverseaQueriedPage;
