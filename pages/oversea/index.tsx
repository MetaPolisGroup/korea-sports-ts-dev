import React from "react";
import Layout from "@/components/layout/layout";
import Oversea from "@/components/oversea";
import useSWR from "swr";
import EmptyData from "@/components/ui/EmptyData/input";
import { NextPage } from "next/types";
import { IMatchProps } from "@/repositories/data";
import { useAppDispatch } from "@/store/hook";
import { loadFirstPage, EStatus } from "@/lib/get-func";
import { useAppSelector } from "@/store/hook";
import { getDataCollectionSnapshort } from "@/lib/snapshort-func";
import { addCountries, addLeagues, addTeams } from "@/store/slices/countries";
import Box from "@mui/material/Box";
import CircularProgress from "@mui/material/CircularProgress";
import { setBettingRules } from "@/store/slices/bettingRulesSlice";
// const Categories = React.lazy(() => import("@/components/categories"));
// const Layout = React.lazy(() => import("@/components/layout/layout"));

import classes from "@/components/domestic/Domestic.module.css";

interface IDataProps {
  data: { data: IMatchProps[]; totalData: number; lastVisible: string };
}

const OverseaPage: NextPage<IDataProps> = (props) => {
  const { category } = useAppSelector((state) => state.categorySlice);
  const dispatch = useAppDispatch();
  const {
    data: datas,
    isLoading,
    mutate,
  } = useSWR(`oversea`, {
    fetcher: async () =>
      await loadFirstPage("matches", category.id, EStatus.OFF),
  });

  React.useEffect(() => {
    mutate(undefined);
    getDataCollectionSnapshort("preferences", (data) =>
      dispatch(setBettingRules({ rules: data.data[0] }))
    );
    getDataCollectionSnapshort("countries", (data) => {
      dispatch(addCountries(data.data));
    });
    getDataCollectionSnapshort("leagues", (data) => {
      dispatch(addLeagues(data.data));
    });
    getDataCollectionSnapshort("team", (data) => {
      dispatch(addTeams(data.data));
    });
  }, [category]);

  return (
    <Layout title="Oversea" description="Generated by create next app">
      {!isLoading ? (
        datas ? (
          <Oversea matchesData={datas.data} />
        ) : (
          <EmptyData message="Not found oversea matches!" />
        )
      ) : (
        <Box sx={{ display: "flex", justifyContent: "center" }}>
          <div className={classes.boxLoading}>
            <CircularProgress />
          </div>
        </Box>
      )}
    </Layout>
  );
};

export default OverseaPage;
